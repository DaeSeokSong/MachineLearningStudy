[OpenCV]
	C와 C++로 작성된 오픈소스 컴퓨터 비전 라이브러리
	리눅스, 윈도우, 맥 환경에서 실행

	계산 효율성과 실시간 처리에 중점을 두고 이식이 가능하게 설계됨
	이에 최적화된 C++로 작성됐고 멀티 코어 프로세서를 활용 가능

	하위 라이브러리는 통계적 패턴 인식과 클러스터링에 중점을 둔다.

	OpenCV는 여러 개의 레이어로 구성된다.
	레이어의 최 상단에넌 OS, 그 다음 레이어는 언어 바인딩과 샘플 응용 프로그램,
	그 아래에는 opencv_contrib에는 사용자가 기여한 코드, 그 다음에 OpenCV의 핵심,
	가장 아래쪽에는 HW가속 레이어의 다양한 하드웨어 최적화가 온다.
	* 블록 다이어그램 이미지
		https://www.researchgate.net/profile/Batuhan-Hanguen/publication/341251073/figure/fig9/AS:888924507475968@1588947526300/OpenCV-Block-Diagram-with-supported-Operating-Systems-13.ppm

	인텔 프로세서를 사용할 경우 인텔의 IPP 라이브러리의 일부인 IPP 8.x(IPPICV)를 무료로 사용
	이는 OpenCV에 링크되며, 그럴 경우 해당 로우 레벨에 최적화된 C 코드를 대체한다
	여기서 얻는 속도 향상은 대단하다.

	* opencv 모듈
		* core, 모든 기본 객체 타입과 기본 연산자가 들어 있는 라이브러리 섹션
		* Imgproc, 이미지 처리 모듈로서 필터나 그와 비슷한 컨벌루션 연산자와 같은 기본 이미지 변환을 포함
		* highgui(imgcodescs, videoio), 이미지를 표시하거나 단순한 사용자의 입력을 받는 데 사용할 수 있는 UI 기능을 포함
		* video, 비디오 스트림을 읽고 쓰는 데 필요한 함수를 포함
		* calib3d, 단일 카메라뿐만 아니라 스테레오나 멀티 카메라 어레이를 캘리브레이션하는 데 필요한 알고리즘이 구현되어 있음
		* features2d, 중요한 feature를 탐지, 표현, 매칭하기 위한 알고리즘이 포함
		* objdetect, 얼굴이나 보행자와 같은 특정 대상을 탐지하는 알고리즘이 들어있다.
		* ml, OpenCV의 기본 데이터 구조체를 사용하도록 구현한 다양한 머신러닝 알고리즘을 포함
		* flann, FLANN(Fast Library for Approximate Nearest Neighbors) 알고리즘으로 이 라이브러리는 유저가 직접 사용할 수 없는 메서드를 포함하고 있지만 거대한 데이터 셋에서 가장 가까운 이웃을 찾기 위해 다른 모듈의 함수에서 사용
		* gpu(cuda 모듈들), gpu에서만 작동하는 몇 가지 기능이 구현돼 있다. 이는 CUDA GPU에서 작동
		* photo, 컴퓨터 활용 사진 기술에 유용한 도구가 포함
		* stitching, 모듈 전체가 정교한 이미지 스티치 파이프라인을 구현한다.
		* nonfree(opencv_contrib/xfeatures2d로 이동), 특허나 사용 제한이 있는 알고리즘에 대해 상용 제품에서 사용하려면 특별한 작업이 필요하다는 것을 알리기 위한 별도의 모듈
		* contrib(opencv_contrib 모듈에 포함), 라이브러리 전체에 통합되지 않은 새기능이 포함됨
		* ocl(T-API 기술로 대체됨), 크로노스 OpenCL 표준으로 구현됐지만 GPU 모듈과 유사한 최신 모듈이다. gpu(cuda)모듈이 NVidia CUDA 툴킷에서만 명시적으로 사용되는 것과 달리 GPU또는 크로노스와 호환되는 다른 병렬 연산 장치에서 실행할 수 있도록 구현하는 걸 목표로 한다.

	OpenCV 3.0에서는 기존에 한 덩어리로 돼 있던 라이브러리를 이미 완성된 기능을 포함하는 opencv와 최신 비전 기술로 구성된 opencv_contrib라는 두 파트로 나눴다.

	* opencv_contrib 모듈
		* Dnn, 심층 신경망
		* face, 얼굴 인식
		* text, 문자 감지 및 인식 선택적으로 오픈소스 OCR인 테서렉트를 백엔드로 사용 가능
		* rgbd, 키넥트(Kinect) 및 기타 깊이 센서로 얻은 RGB + 깊이 맵 처리 또는 단순 스테레오 대응 알고리즘으로 계산
		* bioinspired, 생물학 분야에서 활용되는 비전 기술
		* ximgproc / xphoto, 고급 이미지 처리 및 컴퓨터 활용 사진 기술 알고리즘
		* tracking, 최신 객체 추적 알고리즘

[컴퓨터 비전]
	스틸 카메라나 동영상 카메라로 얻은 데이터를 어떤 판단이나 새로운 표현으로 변환하는 것
	새로운 표현은 컬러 이미지를 흑백 이미지로 변환하거나 연속 영상에서 카메라 모션을 제거하는 것 등

	데이터는 노이즈와 왜곡으로 인해 손실된다. 이러한 솔실은 환경의 변화, 렌즈와 기계 설정의 불완전함,
	센서의 유한한 적분 시간, 센서 또는 기타 전자 기기의 전기 노이즈, 이미지 캡처 후의 압축 손실 등에서
	발생한다.

	머신러닝 기술로 상황 정보를 명시적으로 모형화할 수 있다. 그러면 크기, 중력의 방향 등
	숨겨진 변수를 라벨링된 훈련용 데이터의 값과 연관시킬 수 있다.
	또는 추가 센서를 통해 숨겨진 성향(Bias)에 대한 변수를 얻어내려고 할 수도 있다.
	Ex. 깊이 측정을 위해 레이저 거리 측정기를 사용하면 대상의 크기를 정확하게 측정

	일반적으로는 통계적인 방법을 사용해 노이즈를 처리한다.
	또한 시간의 흐름에 따른 통계로 노이즈를 보완할 수도 있다.
	또 다른 방법은 유효한 데이터로부터 직접 학습된 명시적인 모델을 구축함으로써 노이즈 또는 왜곡을 설명하는 것
	Ex. 렌즈 왜곡은 잘 알려져 있기 때문에 간단한 다항식 모델의 매개 변수를 학습하기만 하면 이러한 왜곡을 거의 완벽하게 캘리브레이션 가능

	컴퓨터 비전이 카메라 데이터를 기반으로 시도하는 행동이나 판단은 특정 목적이나 작업 상황에서 수행
	일반적으로 컴퓨터 비전의 상황이 더 제한적일수록 문제를 단순하게 만들기 위한 제한이 필요하고
	그래야 최종 솔루션을 더 신뢰할 수 있다.