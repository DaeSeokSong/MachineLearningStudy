1. HSV, Hue
- (KR) 윈도우 그림판에서 참조할 수 있는 HUE 값에 1/2을 곱한 값을 써야한다.
- (EN) The value of the HUE that can be referenced in the window pane multiplied by 1/2 shall be written.

※ Custom HSV range
* Blue 			(100, 20, 0) ~ (140, 190, 200)
* Green			(35, 50, 40) ~ (90, 180, 160)
* Red 			(150, 60, 30) ~ (180, 255, 255)
* Incarnadine	(0, 20, 0) ~ (20, 180, 255)

2. BackgroundSubtractor (MOG2, KNN)
- (KR) 상하좌우 흔들림이 없는 고정된 영상에 주로 사용한다.
- (EN) It is mainly used for fixed images that do not shake up, down, left, and right.

3. Color Detection
- (KR) HSV를 통한 inRange 혹은, Histogram을 통한 backProject로 특정 컬러를 추출할 수 있다.
- (EN) A specific color may be extracted through inRange through HSV or backProject through Histogram.

4. Threshold, OTSU
- (KR) OTSU를 이용해 이진화를 하면 영역이 선명하고 큼지막하게 잡혀서 마스크나 인식, 윤곽선 따기에 좋다.
- (EN) Binaryization using OTSU is good for masks, recognition, and contouring because the area is clear and large.

5. Label VS Contour
- (KR) label 함수를 이용하여 윤곽선을 잡는 걸로 정확도가 만족이 안되면 contour 함수로 직접 윤곽선을 잡아 정확도를 향상시킬 수도 있다.
- (EN) If the accuracy is not satisfied by using the label function, the accuracy can be improved by directly capturing the contour with the contour function.

6. Keypoints Match
- (KR) .match로 매칭이 안되는 건 .knnMatch로 매칭이 될 수도 있다.
- (EN) The one that doesn't match, It can also be matched by knnmatch.

7. OpenCV 4.5.0 CMake x64/x84 Build Debug/Release respectively
- (KR)
	1) NONFREE 체크 및 EIGEN, EXTRA(contrib/modules) 경로 지정
	2) BUILD_JASPER, PAKAGE, JAVA 체크 해제
	3) WITH_1394, JASPER, LAPACK, VTK 체크 해제
	4) INSTALL경로 지정 (프로젝트 빌드시 파일 생성 경로)
- (EN)
	1) NONFREE check and path EIGEN, EXTRA (contrib/modules)
	2) Uncheck BUILD_JASPER, PAKAGE, JAVA
	3) WITH_1394, JASPER, LAPACK, VTK unchecked
	4) INSTALL path designation (file creation path when building a project)

8. ZXing CMake x64/x84 Build Debug/Release respectively
- (KR)
	1) CONTIGURATION_TYPE 에서 Debug;Release; 지정
		1-1) Debug 빼고 Release만 지정 가능
	2) INSTALL_PREFIX 경로 지정 (프로젝트 빌드시 파일 생성 경로)
	3) OpenCV_DIR 경로 지정 (CMake 프로젝트 빌드로 생긴 OpenCV 디렉토리 경로)
- (EN)
	1) Specify Debug;Release; in CONTIGURATION_TYPE
		1-1) Only releases can be specified without debugs
	2) INSTALL_PREFIX Path Specification (File Creation Path on Project Build)
	3) Path OpenCV_DIR (OpenCV directory path created by CMake project build)

9. Removing characters in document
- (KR)
	1) 컨투어를 추출해서 컨투어의 바운딩박스가 일정 크기 이하면 제거
	2) 컨투어를 추출해서 컨투어의 바운딩박스 내 해당 컨투어의 영역이 일정 범위 이하면 제거
- (EN)
	1) Extract the contour and remove it if the bounding box of the contour is smaller than a certain size
	2) Extract the contour and remove it if the area of the contour in the bounding box is less than a certain range

10. Add or substract border
- (KR) 배경 이미지를 따로 생성하여 관심 영역으로 이미지를 넣음으로써, white 또는 black의 border를 추가 또는 제거한 영상을 얻을 수 있다.
- (EN) By separately generating a background image and inserting the image into an area of interest, an image in which a white or black border is added or removed can be obtained.

11. Rotate image
- (KR) Affine transform을 통해 이미지를 회전시킬 수도 있지만, 90도씩 회전시키는 것이 목적이라면 OpenCV 내부의 rotate 함수를 이용하면 더 쉽게 회전시킬 수 있다.
- (EN) The image can be rotated through Affine transform, but if the purpose is to rotate by 90 degrees, it can be rotated more easily using the rotate function inside OpenCV.

12. Marshal C# to C++
- (KR)
	C#에서 넘긴 매개변수를 C++에서 수정하고 싶은데 반영이 안되는 경우가 있다.(Ex. 배열)
	C++ 코드(DLL)에서 반영하고자 하는 것을 C#에서 넘긴 매개변수의 메모리에 직접 복사(memcpy, strcpy)하여 C#에선 문자열은 byte로, 그 외 자료형은 해당 자료형의 배열로 받는다.
- (EN)
	If want to modify the parameters passed from C# in C++ (Marshaling), but sometimes it is not reflected. (Ex. Array)
	In the C++ code (DLL), what is intended to be reflected is copied directly into the memory of the parameter passed from C# (memcpy, strcpy), and in C#, the string is byte and the other data types are received as an array of corresponding data types.